<?php

function datapremis_menu() {
    $items['datapremis'] = array(
        'title' => t('Informasi Premis'),
        'description' => 'Manajemen data premis',
        'page callback' => 'data_premis',
        'access callback' => 'user_access',
        'access arguments' => array('Admin Data Premis'),
        'type' => MENU_CALLBACK,
    );
    $items['datapremis/generatepremisid'] = array(
        'title' => t('Generate ID Premis'),
        'description' => 'Generate ID Premis',
        'page callback' => 'generate_premis_ajax',
        'access callback' => 'user_access',
        'access arguments' => array('Admin Data Premis'),
        'type' => MENU_CALLBACK,
    );
    $items['datapremis/uploaddata'] = array(
        'title' => t('Upload Data Premis'),
        'description' => 'Upload data premis',
        'page callback' => 'do_upload_premisdata',
        'access callback' => 'user_access',
        'access arguments' => array('Upload Data Premis'),
        'type' => MENU_CALLBACK,
    );
    return $items;
} // end hook menu

function datapremis_perm() {
    return array('Access Data Premis','Admin Data Premis','Upload Data Premis');
}
function array_zone_gisb(){
    return array(
        '001' => 'Utara',
        '002' => 'Kedah',
        '003' => 'PKBM',
        '004' => 'Penang',
        '005' => 'Perak',
        '006' => 'Barat',
        '007' => 'Pusat',
        '008' => 'Tengah',
        '009' => 'Utama',
        '010' => 'Eksekutif',
        '011' => 'Yayasan',
        '012' => 'Negeri Sembilan',
        '013' => 'Melaka',
        '014' => 'Johor 1',
        '015' => 'Johor 2',
        '016' => 'Pahang',
        '017' => 'Trengganu',
        '018' => 'Kelantan',
        '019' => 'Sabah 1/3',
        '020' => 'Sabah 2/4',
        '021' => 'Sarawak 1',
        '022' => 'Sarawak 2',
        '023' => 'Labuan',
        '024' => 'Thailand 1',
        '025' => 'Thailand 2',
        '026' => 'Thailand 3',
        '027' => 'Pendidikan Insaniah',
        '028' => 'Pendidikan Vokasional',
        '029' => 'Australia T',
        '030' => 'Australia B',
        '031' => 'Sumatera 1',
        '032' => 'Sumatera 2',
        '033' => 'Sumatera 3',
        '034' => 'Jawa  1/2',
        '035' => 'Jawa  3/4',
        '036' => 'Makassar',
        '037' => 'Papua',
        '038' => 'Syam',
        '039' => 'Afrika Utara',
        '040' => 'Haramain',
        '041' => 'Mesir',
    );
}
function data_premis(){
    _addCustomCSS();
    drupal_add_js('misc/media/datatables.1.10/media/js/jquery.js');
    $js_path = drupal_get_path('module','datapremis').'/js/datapremis.js';
    drupal_add_js($js_path);
    $formPremis = drupal_get_form('datapremis_input_form');
    return $formPremis;
}
function datapremis_input_form(&$form_state){
    $dataPremis = get_data_premis();
    if (!count($dataPremis)){
        $idPremis = createEAN13PemisCode();
        $zonePremis = 0;
        $namaPremis = '';
        $alamatPremis = '';
        $telepon = '';
        $whatsapp = '';
        $bbm = '';
        $telegram = '';
        $email = '';
        $website = '';
    }else{
        $idPremis = $dataPremis->id;
        $zonePremis = $dataPremis->zone;
        $namaPremis = $dataPremis->nama;
        $alamatPremis = $dataPremis->alamat;
        $telepon = $dataPremis->telepon;
        $whatsapp = $dataPremis->whatsapp;
        $bbm = $dataPremis->bbm;
        $telegram = $dataPremis->telegram;
        $email = $dataPremis->email;
        $website = $dataPremis->website;
    }
    $form['#attributes'] = array('class' => 'form-item-lined-up');
    $form['zone'] = array(
        '#type' => 'select',
        '#title' => t('Zone Premis'),
        '#options' => array_zone_gisb(),
        '#description' => t('Pilih zone premis.'),
        '#default_value' => $zonePremis,
    );
    $form['id'] = array(
        '#title' => t('id'),
        '#type' => 'textfield',
        '#description' => t('auto generated berdasarkan zone'),
        '#default_value' => $idPremis,
    );
    $form['nama'] = array(
        '#title' => t('Nama Premis'),
        '#type' => 'textfield',
        '#description' => t('Isi nama premis'),
        '#default_value' => $namaPremis,
    );
    $form['alamat'] = array(
        '#title' => t('Alamat Premis'),
        '#type' => 'textarea',
        '#cols' => 40,
        '#rows' => 3,
        '#default_value' => $alamatPremis,
        '#description' => t('Input alamat premis disini.'),
    );
    $form['telepon'] = array(
        '#title' => t('No. Telepon'),
        '#type' => 'textfield',
        '#default_value' => $telepon,
        '#description' => t('Isi nomer telepon premis, pisahkan dengan ; jika lebih dari 1'),
    );
    $form['whatsapp'] = array(
        '#title' => t('No. Whatsapp'),
        '#type' => 'textfield',
        '#default_value' => $whatsapp,
        '#description' => t('Isi nomer whatsapp premis, pisahkan dengan ; jika lebih dari 1'),
    );
    $form['bbm'] = array(
        '#title' => t('Pin BBM'),
        '#type' => 'textfield',
        '#default_value' => $bbm,
        '#description' => t('Isi pin bbm premis, pisahkan dengan ; jika lebih dari 1'),
    );
    $form['telegram'] = array(
        '#title' => t('No. Telegram'),
        '#type' => 'textfield',
        '#default_value' => $telegram,
        '#description' => t('Isi nomer telegram premis, pisahkan dengan ; jika lebih dari 1'),
    );
    $form['email'] = array(
        '#title' => t('Email'),
        '#type' => 'textfield',
        '#default_value' => $email,
        '#description' => t('Isi email premis, pisahkan dengan ; jika lebih dari 1'),
    );
    $form['website'] = array(
        '#title' => t('Website'),
        '#type' => 'textfield',
        '#default_value' => $website,
        '#description' => t('Isi website premis, pisahkan dengan ; jika lebih dari 1'),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Simpan')
    );
    return $form;
}
function datapremis_input_form_validate($form, &$form_state) {
    if ($form_state['values']['zone'] == '') {
        form_set_error('', t('Harus memilih zone terlebih dulu.'));
    }
}
function datapremis_input_form_submit($form, &$form_state) {
    global $user;
    $formValues = $form_state['values'];
    if (cek_data_premis_exists()){
        $formValues['uid'] = $user->uid;
        $formValues['changed'] = time();
        $premisSchema = drupal_get_schema('datapremis');
        $fieldArray = $premisSchema['fields'];
        $fieldList = '';
        $fieldValue = '';
        foreach($fieldArray as $fieldName => $fieldData){
            if ($fieldName != 'created'){
                if (empty($fieldList)){
                    $fieldList = "$fieldName = '".$formValues[$fieldName]."'";
                }else{
                    $fieldList .= ",$fieldName = '".$formValues[$fieldName]."'";
                }
            }
        }
        db_query("UPDATE {datapremis} SET $fieldList");
        drupal_set_message(t('Data premis berhasil diupdate.'));
    }else{
        $formValues['uid'] = $user->uid;
        $formValues['created'] = time();
        $formValues['changed'] = null;
        $premisSchema = drupal_get_schema('datapremis');
        $fieldArray = $premisSchema['fields'];
        $fieldList = '';
        $fieldValue = '';
        foreach($fieldArray as $fieldName => $fieldData){
            if (empty($fieldList)){
                $fieldList = $fieldName;
            }else{
                if ($formValues[$fieldName] != null) {
                    $fieldList .= ',' . $fieldName;
                }
            }
            if (empty($fieldValue)){
                $fieldValue = "'".$formValues[$fieldName]."'";
            }else{
                if ($formValues[$fieldName] != null){
                    $fieldValue .= ",'".$formValues[$fieldName]."'";
                }
            }
        }
        db_query("INSERT INTO {datapremis} ($fieldList) VALUES ($fieldValue)");
        drupal_set_message(t('Data premis berhasil dibuat.'));
    }
}
function cek_data_premis_exists(){
    global $db_prefix;
    $dataPremisExists = false;
    $countDataPremis = db_result(db_query("SELECT COUNT(*) FROM {datapremis}"));
    if ($countDataPremis > 0){
        $dataPremisExists = true;
    }
    return $dataPremisExists;
}
function get_data_premis(){
    global $db_prefix;
    $arrayData = array();
    $premisSchema = drupal_get_schema('datapremis');
    $fieldArray = $premisSchema['fields'];
    $fieldList = '';
    foreach($fieldArray as $fieldName => $fieldData){
        if (empty($fieldList)){
            $fieldList = $fieldName;
        }else{
            $fieldList .= ','.$fieldName;
        }
    }
    if (cek_data_premis_exists()){
        $strSQL = 'SELECT '.$fieldList.' FROM '.$db_prefix.'datapremis LIMIT 1';
        $result = db_query($strSQL);
        $arrayData = db_fetch_object($result);
    }
    return $arrayData;
}
function get_data_premis_uploaded(){
    global $db_prefix;
    $arrayData = array();
    $premisSchema = drupal_get_schema('datapremis');
    $fieldArray = $premisSchema['fields'];
    $fieldList = '';
    foreach($fieldArray as $fieldName => $fieldData){
        if (empty($fieldList)){
            $fieldList = $fieldName;
        }else{
            $fieldList .= ','.$fieldName;
        }
    }
    if (cek_data_premis_exists()){
        $strSQL = 'SELECT '.$fieldList.' FROM '.$db_prefix.'datapremis LIMIT 1';
        $result = db_query($strSQL);
        $arrayData = db_fetch_array($result);
    }
    return $arrayData;
}
function createRandomCode($length=13)
{
    $key = '';
    $keys = array_merge(range(0, 9));
    for ($i = 0; $i < $length; $i++) {
        mt_srand((double)microtime() * 10000000);
        $key .= $keys[array_rand($keys)];
    }
    return $key;
}
function createEAN13PemisCode($premisCode = null, $number = null){
    if (empty($premisCode)) $premisCode = '001';
    if (empty($number)) $number = createRandomCode(6);
    $code = '899' . $premisCode. str_pad($number, 6, '0');
    $weightflag = true;
    $sum = 0;
    // Weight for a digit in the checksum is 3, 1, 3.. starting from the last digit.
    // loop backwards to make the loop length-agnostic. The same basic functionality
    // will work for codes of different lengths.
    for ($i = strlen($code) - 1; $i >= 0; $i--)
    {
        $sum += (int)$code[$i] * ($weightflag?3:1);
        $weightflag = !$weightflag;
    }
    $code .= (10 - ($sum % 10)) % 10;
    return $code;
}
function generate_premis_ajax(){
    $jsonPremis = null;
    if (isset($_POST['zone']) && !empty($_POST['zone'])){
        $jsonPremis[] = createEAN13PemisCode($_POST['zone']);
    }
    print json_encode($jsonPremis);
    exit();
}
function do_upload_premisdata(){
    return 'Test';
}
function do_upload_premisdata_old(){
    $resultview = '';
    if (is_connected()) {
        //copy premis data();
        $url = 'http://report.ikhwanit.com/importdatapremis';
        /* Process Upload Product Data */
        $totalRecord = db_result(db_query("SELECT COUNT(*) AS total_record FROM product WHERE uploaded = 0"));
        $totalUploadProcess = floor($totalRecord / 40) + 1;
        if ($totalUploadProcess > 40) {
            $totalUploadProcess = 40;
        }
        $dataPremis = get_data_premis_uploaded();
        $dataProduct = get_updated_product();
        $uploadproses = 1;
        for ($i = 0; $i < $totalUploadProcess; $i++) {
            $startJ = ($i * 40);
            $endRecord = ($i * 40) + 40;
            if ($endRecord > $totalRecord) {
                $endRecord = $totalRecord;
            }
            $postproduct = array();
            for ($j = $startJ; $j < $endRecord; $j++) {
                if (isset($dataProduct[$j])) {
                    $postproduct[] = $dataProduct[$j];
                }
            }
            $postdata = array('premisuser' => 'ikhwanmart', 'premispssword' => '@abuya313', 'datapremis' => $dataPremis);
            $postdata['product'] = $postproduct;
            $fields_string2 = http_build_query($postdata, '', '&');
            $ch = curl_init();
            //set the url, number of POST vars, POST data
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //Set curl to return the data instead of printing it to the browser.
            curl_setopt($ch, CURLOPT_URL, $url);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string2);
            curl_setopt($ch, CURLOPT_COOKIEJAR, 'cookie.txt');
            $result = curl_exec($ch);
            $arrayProdUploaded = json_decode($result);
            $resultview .= '<p>' . $uploadproses . '. Record : ' . $startJ . ' to ' . $endRecord . ' Product successfully uploaded[' . count($arrayProdUploaded) . '] : <ul>';
            for ($k = 0; $k < count($arrayProdUploaded); $k++) {
                $prod_id = $arrayProdUploaded[$k]->idproduct_old;
                $proses = $arrayProdUploaded[$k]->proses;
                db_query("UPDATE product SET uploaded = 1 WHERE idproduct='%d'", $prod_id);
                $productName = $arrayProdUploaded[$k]->namaproduct;
                $productBarcode = $arrayProdUploaded[$k]->barcode;
                $resultview .= '<li>ID : ' . $prod_id . ', Barcode : ' . $productBarcode . ', Product Name : ' . $productName . ', Proses : ' . $proses . '</li>';
            }
            $resultview .= '</ul></p>';
            curl_close($ch);
            $uploadproses++;
        }
        /* End Process Upload Product Data */
        /* Process Upload Penjualan Data */
        $totalRecord = db_result(db_query("SELECT COUNT(*) AS total_record FROM penjualan WHERE uploaded = 0"));
        $totalUploadProcess = floor($totalRecord / 50) + 1;
        if ($totalUploadProcess > 40) {
            $totalUploadProcess = 40;
        }
        $dataPremis = get_data_premis_uploaded();
        $dataPenjualan = get_updated_penjualan();
        $uploadproses = 1;
        for ($i = 0; $i < $totalUploadProcess; $i++) {
            $startJ = ($i * 50);
            $endRecord = ($i * 50) + 50;
            if ($endRecord > $totalRecord) {
                $endRecord = $totalRecord;
            }
            $postpenjualan = array();
            for ($j = $startJ; $j < $endRecord; $j++) {
                if (isset($dataPenjualan[$j])) {
                    $postpenjualan[] = $dataPenjualan[$j];
                }
            }
            $postdata = array('premisuser' => 'ikhwanmart', 'premispssword' => '@abuya313', 'datapremis' => $dataPremis);
            $postdata['penjualan'] = $postpenjualan;
            $fields_string2 = http_build_query($postdata, '', '&');
            $ch = curl_init();
            //set the url, number of POST vars, POST data
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //Set curl to return the data instead of printing it to the browser.
            curl_setopt($ch, CURLOPT_URL, $url);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string2);
            curl_setopt($ch, CURLOPT_COOKIEJAR, 'cookie.txt');
            $result = curl_exec($ch);
            $arrayPenjualanUploaded = json_decode($result);
            $resultview .= '<p>' . $uploadproses . '. Penjualan successfully uploaded[' . count($arrayPenjualanUploaded) . '] : <ul>';
            for ($k = 0; $k < count($arrayPenjualanUploaded); $k++) {
                $penj_id = $arrayPenjualanUploaded[$k]->idpenjualan;
                $proses = $arrayPenjualanUploaded[$k]->proses;
                db_query("UPDATE penjualan SET uploaded = 1 WHERE idpenjualan='%d'", $penj_id);
                $noNota = $arrayPenjualanUploaded[$k]->nonota;
                $tglPenjualan = $arrayPenjualanUploaded[$k]->tglpenjualan;
                $resultview .= '<li>ID report : ' . $arrayPenjualanUploaded[$k]->id . ', ID : ' . $penj_id . ', No. Nota : ' . $noNota . ', Tgl Penjualan : ' . $tglPenjualan . ', Proses : ' . $proses . '</li>';
            }
            $resultview .= '</ul></p>';
            curl_close($ch);
            $uploadproses++;
        }
        /* End Process Upload Penjualan Data */
    }
    return $resultview;
}
function is_connected(){
    $connected = @fsockopen("report.ikhwanit.com", 80);
    //website, port  (try 80 or 443)
    if ($connected){
        $is_conn = true; //action when connected
        fclose($connected);
    }else{
        $is_conn = false; //action in connection failure
    }
    return $is_conn;

}